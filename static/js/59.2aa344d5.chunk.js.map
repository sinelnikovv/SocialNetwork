{"version":3,"file":"static/js/59.2aa344d5.chunk.js","mappings":"6KACA,EAAqC,oCAArC,EAA6F,mC,qMCyO7F,EAtNwB,SAACA,GACvB,IAAMC,EAAsBC,EAAAA,KAAaC,MAAM,CAC7CC,SAAUF,EAAAA,GACA,2BACPG,IAAI,EAAG,uCAGZC,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbJ,SAAUJ,EAAMS,QAAQL,SACxBM,QAASV,EAAMS,QAAQC,QACvBC,eAAgBX,EAAMS,QAAQE,eAC9BC,0BAA2BZ,EAAMS,QAAQG,0BACzCC,SAAUb,EAAMS,QAAQK,SAASD,SACjCE,OAAQf,EAAMS,QAAQK,SAASC,OAC/BC,UAAWhB,EAAMS,QAAQK,SAASE,UAClCC,SAAUjB,EAAMS,QAAQK,SAASG,SACjCC,QAASlB,EAAMS,QAAQK,SAASI,QAChCC,GAAInB,EAAMS,QAAQK,SAASK,GAC3BC,QAASpB,EAAMS,QAAQK,SAASM,QAChCC,QAASrB,EAAMS,QAAQK,SAASO,SAElCC,UAAUC,EAAAA,EAAAA,GAAYtB,KAlBtBuB,EAAQlB,EAARkB,SACAC,EAAYnB,EAAZmB,aACaC,EAAMpB,EAAnBqB,UAAaD,OAmBTE,EAAwBC,EAAAA,OAAa,MAU3C,OATAA,EAAAA,WAAgB,WACd,GAAI7B,EAAM8B,gBAAiB,CACzB,IAAiBC,EAAuBH,EAAhCI,QACmB,OAAvBD,GACFA,EAAmBE,OAEvB,CACF,GAAG,CAACjC,EAAM8B,mBAGRI,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,KAAMpC,EAAM8B,gBAAiBO,QAASrC,EAAMsC,qBAAsBC,OAAO,QAAOC,SAAA,EACrFC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,GAAG,sBAAqBH,SAAC,oBACtCC,EAAAA,EAAAA,KAACG,EAAAA,EAAa,CAACC,UAAQ,EAAAL,UACtBC,EAAAA,EAAAA,KAAA,QAAMK,SAAUrB,EAAazB,EAAM8C,UAAUN,UAC3CN,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZX,SAAA,EAEFN,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAAAP,SAAA,EACFC,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,WACHa,QAAQ,WACRC,MAAM,YACNC,KAAK,YACDlC,EAAS,aAAW,IACxBmC,UAAQ,EACRC,MAAOlC,EAAOtB,YAEfsB,EAAOtB,UACNqC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACL,QAAQ,QAAQM,UAAU,IAAGtB,SACtCd,EAAOtB,SAAS2D,WAGnBtB,EAAAA,EAAAA,KAAAuB,EAAAA,SAAA,QAGJvB,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAAAP,UACFC,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,UACHa,QAAQ,WACRC,MAAM,WACNC,KAAK,WACDlC,EAAS,gBAGjBiB,EAAAA,EAAAA,KAACwB,EAAAA,EAAgB,CACfjB,GAAI,CAAEkB,EAAG,GACTC,eAAe,QACfC,SACE3B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAQhB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACH7B,EAAS,mBAAiB,IAC9BkC,KAAK,iBACLf,GAAG,oBAGPc,MAAM,wBAGRhB,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,4BACHa,QAAQ,WACRC,MAAM,YACNC,KAAK,6BACDlC,EAAS,gCAEfiB,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACb,GAAI,CAAEsB,GAAI,GAAI9B,SAAC,kBAE3BN,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAAWX,SAAA,EACjDC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAoB,CACnBC,SAAS,QACTxB,GAAI,CAAEyB,MAAO,gBAAiBC,GAAI,EAAGJ,GAAI,OAE3C7B,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,WACHa,QAAQ,WACRC,MAAM,WACNC,KAAK,YACDlC,EAAS,kBAGjBU,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAAWX,SAAA,EACjDC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACTH,SAAS,QACTxB,GAAI,CAAEyB,MAAO,gBAAiBC,GAAI,EAAGJ,GAAI,OAE3C7B,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,SACHa,QAAQ,WACRC,MAAM,SACNC,KAAK,UACDlC,EAAS,gBAIjBU,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAAWX,SAAA,EACjDC,EAAAA,EAAAA,KAACmC,EAAAA,EAAa,CACZJ,SAAS,QACTxB,GAAI,CAAEyB,MAAO,gBAAiBC,GAAI,EAAGJ,GAAI,OAE3C7B,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,YACHa,QAAQ,WACRC,MAAM,YACNC,KAAK,aACDlC,EAAS,mBAIjBU,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAAWX,SAAA,EACjDC,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CACVL,SAAS,QACTxB,GAAI,CAAEyB,MAAO,gBAAiBC,GAAI,EAAGJ,GAAI,OAE3C7B,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,UACHa,QAAQ,WACRC,MAAM,UACNC,KAAK,WACDlC,EAAS,iBAIjBU,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAAWX,SAAA,EACjDC,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CACXN,SAAS,QACTxB,GAAI,CAAEyB,MAAO,gBAAiBC,GAAI,EAAGJ,GAAI,OAE3C7B,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,WACHa,QAAQ,WACRC,MAAM,YACNC,KAAK,YACDlC,EAAS,kBAIjBU,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAAWX,SAAA,EACjDC,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CACXN,SAAS,QACTxB,GAAI,CAAEyB,MAAO,gBAAiBC,GAAI,EAAGJ,GAAI,OAE3C7B,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,UACHa,QAAQ,WACRC,MAAM,UACNC,KAAK,WACDlC,EAAS,iBAIjBU,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAAWX,SAAA,EACjDC,EAAAA,EAAAA,KAACsC,EAAAA,EAAW,CACVP,SAAS,QACTxB,GAAI,CAAEyB,MAAO,gBAAiBC,GAAI,EAAGJ,GAAI,OAE3C7B,EAAAA,EAAAA,KAACW,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRL,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChBZ,GAAG,UACHa,QAAQ,WACRC,MAAM,UACNC,KAAK,WACDlC,EAAS,iBAGjBiB,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACC,KAAK,SAASzB,QAAQ,WAAUhB,SAAC,kBAMrD,E,0FCtKA,EA3DsB,SAACxC,GACrB,IAAQkF,GAASC,EAAAA,EAAAA,IAAkBnF,EAAMoF,QAAjCF,KAERG,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAyCC,EAAAA,EAAAA,GAAAH,EAAA,GAA7B,GAEnBI,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAAxCG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCJ,EAAAA,EAAAA,YAAUK,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAArCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GASxBG,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnBpB,EAAa,CAAEqB,OAAQZ,IAAaa,SAAS,KAAD,EAClDhB,GAAY,GAAO,wBAAAY,EAAAK,OAAA,GAAAP,EAAA,KACpB,kBAHuB,OAAAJ,EAAAY,MAAA,KAAAC,UAAA,KASxB,OACE9E,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAACsB,GAAG,GAAG9B,SAAA,EACZoD,IACA1D,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAAAP,SAAA,EACFC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACb,GAAI,CAAEsB,GAAI,EAAGf,EAAG,GAAIf,SAAE0C,GAAQ,cACzClF,EAAMiH,UAASxE,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACkC,KAAK,QAAQ1D,QAAQ,WAAW2D,QArBvC,WACnBnH,EAAMiH,UACRpB,GAAY,GACZI,EAAaf,GAEjB,EAgB0F1C,SAAC,mBAMtFoD,IACC1D,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,cAAe,UAAWV,SAAA,EACpDC,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CACRJ,GAAI,CAAEM,GAAI,EAAGC,EAAG,GAChB6D,MAAOpB,EACPqB,SApBa,SAACC,GACtBrB,EAAaqB,EAAEC,cAAcH,MAC/B,EAmBUzE,GAAG,iBACHa,QAAQ,SACRC,MAAM,YAERhB,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CACLhC,GAAI,CAAEwE,UAAW,cACjBN,KAAK,QACL1D,QAAQ,WACR2D,QAASjB,EAAmB1D,SAC7B,qBAOX,ECsGA,EAzJoB,SAACxC,GACnB,OACEyC,EAAAA,EAAAA,KAAAuB,EAAAA,SAAA,CAAAxB,UACEN,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEyE,GAAI,GAAIjF,SAAA,EAEjBC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACL,QAAQ,KAAKM,UAAU,KAAItB,SACpCxC,EAAMS,QAAQL,YAEjBqC,EAAAA,EAAAA,KAACiF,EAAAA,EAAO,KAERjF,EAAAA,EAAAA,KAACkF,EAAa,CAACV,QAASjH,EAAMiH,QAAS7B,OAAQpF,EAAMS,QAAQ2E,UAC7D3C,EAAAA,EAAAA,KAACiF,EAAAA,EAAO,KACRxF,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAACsB,GAAG,GAAG9B,SAAA,EAChBN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CAAArB,SAAA,CAAC,aAAWxC,EAAMS,QAAQC,YACrCwB,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,cAAe,OAAQV,SAAA,EACjDC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAAArB,SAAC,uBACXxC,EAAMS,QAAQE,gBACb8B,EAAAA,EAAAA,KAACmF,EAAAA,EAAuB,KAExBnF,EAAAA,EAAAA,KAACoF,EAAAA,EAAkB,QAGvBpF,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAAAP,UACFN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CAAArB,SAAA,CAAC,WACDxC,EAAMS,QAAQG,+BAI1BkH,OAAOC,OAAO/H,EAAMS,QAAQK,UAAUkH,MACrC,SAACC,GAAI,OAAc,OAATA,CAAa,MAEvB/F,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAAAP,SAAA,EACFC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAAArB,SAAC,kBAEZN,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAAAP,SAAA,CACDxC,EAAMS,QAAQK,SAASD,WACtB4B,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CACNC,MAAOnI,EAAMS,QAAQK,SAASD,SAC9BuH,OAAK,EACLC,oBAAqBC,EAAAA,EAAK9F,UAE1BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,KAAMxI,EAAMS,QAAQK,SAASD,SAC7B4D,MAAM,UAASjC,UAEfC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAoB,CAACC,SAAS,cAKpCxE,EAAMS,QAAQK,SAASC,SACtB0B,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CACNC,MAAOnI,EAAMS,QAAQK,SAASC,OAC9BqH,OAAK,EACLC,oBAAqBC,EAAAA,EAAK9F,UAE1BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,KAAMxI,EAAMS,QAAQK,SAASC,OAC7B0D,MAAM,UAASjC,UAEfC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACH,SAAS,cAK1BxE,EAAMS,QAAQK,SAASE,YACtByB,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CACNC,MAAOnI,EAAMS,QAAQK,SAASE,UAC9BoH,OAAK,EACLC,oBAAqBC,EAAAA,EAAK9F,UAE1BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,KAAMxI,EAAMS,QAAQK,SAASE,UAC7ByD,MAAM,UAASjC,UAEfC,EAAAA,EAAAA,KAACmC,EAAAA,EAAa,CAACJ,SAAS,cAK7BxE,EAAMS,QAAQK,SAASI,UACtBuB,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CACNC,MAAOnI,EAAMS,QAAQK,SAASI,QAC9BkH,OAAK,EACLC,oBAAqBC,EAAAA,EAAK9F,UAE1BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,KAAMxI,EAAMS,QAAQK,SAASI,QAC7BuD,MAAM,UAASjC,UAEfC,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACL,SAAS,cAK3BxE,EAAMS,QAAQK,SAASG,WACtBwB,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CACNC,MAAOnI,EAAMS,QAAQK,SAASG,SAC9BmH,OAAK,EACLC,oBAAqBC,EAAAA,EAAK9F,UAE1BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,KAAMxI,EAAMS,QAAQK,SAASG,SAC7BwD,MAAM,UAASjC,UAEfC,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CAACN,SAAS,cAK5BxE,EAAMS,QAAQK,SAASM,UACtBqB,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CACNC,MAAOnI,EAAMS,QAAQK,SAASM,QAC9BgH,OAAK,EACLC,oBAAqBC,EAAAA,EAAK9F,UAE1BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,KAAMxI,EAAMS,QAAQK,SAASM,QAC7BqD,MAAM,UAASjC,UAEfC,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CAACN,SAAS,cAK5BxE,EAAMS,QAAQK,SAASO,UACtBoB,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,CACNC,MAAOnI,EAAMS,QAAQK,SAASO,QAC9B+G,OAAK,EACLC,oBAAqBC,EAAAA,EAAK9F,UAE1BC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,KAAMxI,EAAMS,QAAQK,SAASO,QAC7BoD,MAAM,UAASjC,UAEfC,EAAAA,EAAAA,KAACsC,EAAAA,EAAW,CAACP,SAAS,oBAOjCxE,EAAMiH,UACLxE,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACxB,QAAQ,WAAW2D,QAASnH,EAAMyI,aAAajG,SAAC,wBAQlE,E,oGClKMkG,EAAaC,KAAKC,GAAK,IAEtB,SAAeC,EAAaC,EAAAC,EAAAC,GAAA,OAAAC,EAAAlC,MAAC,KAADC,UAAA,CA4DlC,SAAAiC,IAAA,OAAAA,GAAA7C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MA5DM,SAAAC,EACL2C,EACAC,EACAC,GAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhD,UAAA,OAAAX,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI+B,GAHnC0C,EAAKW,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,EACRV,EAAMU,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,EAEHT,EAAMJ,EAAOgB,WAAW,MAErB,CAAD1D,EAAAE,KAAA,cACA,IAAIyD,MAAM,iBAAgB,OAG5BZ,EAASN,EAAMmB,aAAenB,EAAMoB,MACpCb,EAASP,EAAMqB,cAAgBrB,EAAMsB,OAKrCd,EAAae,OAAOC,iBAG1BvB,EAAOmB,MAAQ3B,KAAKgC,MAAMvB,EAAKkB,MAAQd,EAASE,GAChDP,EAAOqB,OAAS7B,KAAKgC,MAAMvB,EAAKoB,OAASf,EAASC,GAElDH,EAAIF,MAAMK,EAAYA,GACtBH,EAAIqB,sBAAwB,OAEtBjB,EAAQP,EAAKyB,EAAIrB,EACjBI,EAAQR,EAAK0B,EAAIrB,EAEjBI,EAAaP,EAASZ,EACtBoB,EAAUZ,EAAMmB,aAAe,EAC/BN,EAAUb,EAAMqB,cAAgB,EAEtChB,EAAIwB,OAGJxB,EAAIyB,WAAWrB,GAAQC,GAEvBL,EAAIyB,UAAUlB,EAASC,GAEvBR,EAAID,OAAOO,GAEXN,EAAIF,MAAMA,EAAOA,GAEjBE,EAAIyB,WAAWlB,GAAUC,GACzBR,EAAI0B,UACF/B,EACA,EACA,EACAA,EAAMmB,aACNnB,EAAMqB,cACN,EACA,EACArB,EAAMmB,aACNnB,EAAMqB,eAGRhB,EAAI2B,UAAS,yBAAAzE,EAAAK,OAAA,GAAAP,EAAA,KACd0C,EAAAlC,MAAA,KAAAC,UAAA,C,gCChDKmE,EAAW,CACfC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXjB,MAAO,IACPkB,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXnI,EAAG,GAmBL,IAoLA,GApLsB,SAACvD,GACrB,IC1CA2L,EACAC,EACAC,EDwCAC,GAAwCC,EAAAA,EAAAA,IAAY,CAClDC,SAAU,EACVC,OAAQ,CACN,aAAc,GACd,YAAa,IAEfC,OAAQ,SAACC,GACPC,OAAQlC,GACR,IAAMmC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAAO,IAADC,EACpCC,GAAuB,QAAbD,EAAAH,EAAOK,cAAM,IAAAF,OAAA,EAAbA,EAAeG,aAAc,GACzC,IACAN,EAAOO,cAAcT,EAAc,GACrC,IAbMU,EAAYf,EAAZe,aAAcC,EAAahB,EAAbgB,cAgBtBrH,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAAjCsH,EAAMpH,EAAA,GAAE8G,EAAS9G,EAAA,GAClBqH,GAAmBC,EAAAA,EAAAA,QAAO,MAC1BC,GAASD,EAAAA,EAAAA,QAAO,MAChBE,GAAaF,EAAAA,EAAAA,QAAO,IAC1BnH,GAAwBJ,EAAAA,EAAAA,YAAUK,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA3BsD,EAAIrD,EAAA,GAAEqG,EAAOrG,EAAA,GACpBqH,GAA0C1H,EAAAA,EAAAA,YAAU2H,GAAA7H,EAAAA,EAAAA,GAAA4H,EAAA,GAA7CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA0B9H,EAAAA,EAAAA,UAAS,GAAE+H,GAAAjI,EAAAA,EAAAA,GAAAgI,EAAA,GAA9BnE,EAAKoE,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA4BjI,EAAAA,EAAAA,UAAS,GAAEkI,GAAApI,EAAAA,EAAAA,GAAAmI,EAAA,GAAhCrE,EAAMsE,EAAA,GACbC,GADwBD,EAAA,IACIlI,EAAAA,EAAAA,UAAS,IAAMoI,GAAAtI,EAAAA,EAAAA,GAAAqI,EAAA,GAApCE,EAAMD,EAAA,GACbE,GADwBF,EAAA,IACwBpI,EAAAA,EAAAA,aAAUuI,GAAAzI,EAAAA,EAAAA,GAAAwI,EAAA,GAAnDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GCnE5CtC,GDgGiBvF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACf,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAAb2G,QAAa,IAAbA,GAAAA,EAAehD,OACF,OAAbgD,QAAa,IAAbA,GAAAA,EAAe9C,QACf0C,EAAOlL,SACPgL,EAAiBhL,UAGjB6G,EACEqE,EAAOlL,QACPgL,EAAiBhL,QACjBsL,EACAjE,EACAC,GAEF0D,EAAiBhL,QAAQoM,QAAO,SAACC,GAC/B,IAAKA,EACH,MAAM,IAAIjE,MAAM,yBAEd+C,EAAWnL,SACbsM,IAAIC,gBAAgBpB,EAAWnL,SAEjCmL,EAAWnL,QAAUsM,IAAIE,gBAAgBH,GACzC,IAAMI,EAAW,IAAIC,KAAK,CAACL,GAAO,sBAAuB,CACvDpJ,KAAM,cAERkJ,GAAqBM,EAASvH,KAAO,KAAO,MAAMyH,QAAQ,GAC5D,KACD,wBAAAlI,EAAAK,OAAA,GAAAP,EAAA,KC5HLqF,ED8HE,IC7HFC,ED8HE,CAACyB,EAAejE,EAAOC,IC5HzBsF,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAIC,YAAW,WACnBnD,EAAG5E,WAAMmD,EAAW2B,EACtB,GAAGD,GAEH,OAAO,WACLmD,aAAaF,EACf,CACF,GAAGhD,GD2HH,OACEpJ,EAAAA,EAAAA,KAACuM,EAAAA,EAAK,CACJ5M,KAAMpC,EAAMiP,iBACZ5M,QAASrC,EAAMkP,sBACf,kBAAgB,oBAChB,mBAAiB,0BACjBC,sBAAoB,EACpBC,MAAO,CAAEC,SAAUC,EAAAA,GACjBC,UAAW,CACTF,SAAU,CACRG,QAAS,MAEXhN,UAEJC,EAAAA,EAAAA,KAACgN,EAAAA,EAAI,CAACC,GAAI1P,EAAMiP,iBAAiBzM,UAC/BN,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAImI,EAAS3I,SAAA,EAChBN,EAAAA,EAAAA,MAAA,OAAAmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAASwJ,KAAc,IAAArK,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAAY,EAAAA,EAAAA,GAAA,GAAWyJ,OACXrK,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6DACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0DAGHuK,IACD7K,EAAAA,EAAAA,MAAA8B,EAAAA,SAAA,CAAAxB,SAAA,EACEC,EAAAA,EAAAA,KAACkN,EAAAA,GAAS,CACRvG,KAAMA,EACN/B,SAAU,SAACuI,EAAGC,GAAW,OAAKzD,EAAQyD,EAAY,EAClDC,WAAY,SAACC,GAAC,OAAKxC,EAAiBwC,EAAE,EACtChC,OAAQA,EAAOvL,UAEfC,EAAAA,EAAAA,KAAA,OACEuN,IAAK9C,EACL+C,IAAI,UACJC,IAAKnD,EACLoD,MAAO,CAAE5E,UAAU,SAAD6E,OAAW/G,EAAK,MAClCgH,OArGhB,SAAqB/I,GACnB,GAAIyG,EAAQ,CACV,IAAAuC,EAA0BhJ,EAAEC,cAApB+C,EAAKgG,EAALhG,MAAOE,EAAM8F,EAAN9F,OACf4B,EA/CN,SAA0BmE,EAAYC,EAAazC,GACjD,OAAO0C,EAAAA,EAAAA,KACLC,EAAAA,EAAAA,IACE,CACEC,KAAM,IACNrG,MAAO,IAETyD,EACAwC,EACAC,GAEFD,EACAC,EAEJ,CAiCcI,CAAiBtG,EAAOE,EAAQuD,GAC1C,CACF,OAmGYtL,EAAAA,EAAAA,KAACoO,EAAAA,GAAM,CACL,aAAW,QACXC,YAAY,WACZC,iBA7CM,SAAC1H,GACnBqE,EAASrE,EACX,EA4Cc2H,kBAAkB,OAClBC,aAAc,EACdC,IAAK,EACLC,KAAM,GACNnO,GAAI,CAAEwH,OAAQ,YAIjB8C,IACDpL,EAAAA,EAAAA,MAAA8B,EAAAA,SAAA,CAAAxB,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UACEuN,IAAKhD,EACLmD,MAAO,CACL1E,OAAQ,kBACR2F,UAAW,UACX9G,MAAOgD,EAAchD,MACrBE,OAAQ8C,EAAc9C,aAK5BtI,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAAAP,SAAA,EACFC,EAAAA,EAAAA,KAAA,UAAQ0E,QA5HtB,WACE,IAAK6F,EAAiBhL,QACpB,MAAM,IAAIoI,MAAM,8BAElB4C,EAAiBhL,QAAQoM,QAAO,SAACC,GAC/B,IAAKA,EACH,MAAM,IAAIjE,MAAM,yBAEd+C,EAAWnL,SACbsM,IAAIC,gBAAgBpB,EAAWnL,SAEjCmL,EAAWnL,QAAUsM,IAAIE,gBAAgBH,GACzC,IAAMI,EAAW,IAAIC,KAAK,CAACL,GAAO,gBAAiB,CAAEpJ,KAAM,cAC3DjF,EAAMqR,YAAY5C,GAClBhC,EAAU,IACVc,IACAvN,EAAMkP,uBACR,GACF,EA0G2C1M,SAAC,eAC9BN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CACTb,GAAI,CACF,CACEyB,MAAO,OAETyJ,EAAmB,GAAK,CACtBzJ,MAAO,UAETjC,SAAA,CACH,sCACqC0L,EAAiB,oBASvE,EEzFA,GAnHgB,WACd,IAAAzI,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAApD3D,EAAe6D,EAAA,GAAE2L,EAAgB3L,EAAA,GACxCG,GAA8CJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAtDmJ,EAAgBlJ,EAAA,GAAEwL,EAAiBxL,EAAA,GACpCyL,EAAuB,WAAH,OAASD,GAAkB,EAAM,EAIrDE,GAAKC,EAAAA,EAAAA,SAAWxH,EAAW,CAC/ByH,iBAAkB,SAAAxL,GAAO,MAAQ,CAC/BsL,GADuBtL,EAAJjB,KACVA,KACV,IAICE,GADUwM,EAAAA,EAAAA,MACOxM,OACjB6B,GAAU,EACT7B,IACHA,EAASqM,EAAGA,GAAG9O,IAEbyC,IAAWqM,EAAGA,GAAG9O,KACnBsE,GAAU,GAGZ,IAAMxG,GAAUoR,EAAAA,EAAAA,IAAmBzM,GAEnC0M,GAAsBC,EAAAA,EAAAA,MAAfC,GAAuCxM,EAAAA,EAAAA,GAAAsM,EAAA,GAA5B,GAElBG,GAAoBC,EAAAA,EAAAA,MAAbC,GAAmC3M,EAAAA,EAAAA,GAAAyM,EAAA,GAA1B,GA2BhB,OAAOxR,EAAQ2R,SACb3P,EAAAA,EAAAA,KAAC4P,EAAAA,QAAY,IACX5R,EAAQ6R,WACV7P,EAAAA,EAAAA,KAAC8P,EAAAA,EAAS,IACR9R,EAAQyE,MAEVhD,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CACFC,GAAI,CACFO,EAAG,EACHN,QAAS,OACTC,cAAe,CAACsP,GAAG,SAAUC,GAAG,OAChCtP,WAAY,CAACqP,GAAG,SAAUC,GAAG,SAC7BC,SAAS,KACTlQ,SAAA,EAEFN,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEoI,SAAU,YAAa5I,SAAA,EAChCC,EAAAA,EAAAA,KAACkQ,EAAAA,EAAM,CACL1C,IAAKxP,EAAQyE,KAAK9E,SAClB8P,IAAKzP,EAAQyE,KAAK0N,OAAOC,MACzBrP,QAAQ,SACRR,GAAI,CACFsH,MAAO,CAACkI,GAAG,IAAKM,GAAG,KACnBtI,OAAQ,CAACgI,GAAG,IAAKM,GAAG,QAEvB7L,IAASxE,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACgQ,UAAWC,EAA0BxQ,UAClDC,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CACLmC,QAASqK,EACT/M,MAAM,OACNjB,QAAQ,WACRyP,WAAWxQ,EAAAA,EAAAA,KAACyQ,EAAAA,EAAqB,IAAI1Q,SACtC,gBAIFyE,IAASxE,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACgQ,UAAWC,EAAyBxQ,UACjDC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAAC9D,MAAM,OAAO0C,QAASqK,EAAqBhP,UACrDC,EAAAA,EAAAA,KAACyQ,EAAAA,EAAqB,YAM5BhR,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,GAAI,CAAEwE,UAAW,UAAW2L,GAAI,EAAGC,GAAI,EAAGV,SAAS,GAAIlQ,SAAA,EAG1DC,EAAAA,EAAAA,KAAC4Q,EAAW,CACV5K,aAvEa,WACnB6I,GAAiB,EACnB,EAsEQ7Q,QAASA,EAAQyE,KACjB+B,QAASA,KAEXxE,EAAAA,EAAAA,KAAC6Q,EAAe,CAAC7S,QAASA,EAAQyE,KAAMpC,SAvE7B,SAACyQ,GAChB,IAAIC,EAAO,CACTpT,SAAUmT,EAASnT,SACnBM,QAAS6S,EAAS7S,QAClBC,eAAgB4S,EAAS5S,eACzBC,0BAA2B2S,EAAS3S,0BACpCE,SAAU,CACRD,SAAU0S,EAAS1S,SACnBE,OAAQwS,EAASxS,OACjBC,UAAWuS,EAASvS,UACpBC,SAAUsS,EAAStS,SACnBC,QAASqS,EAASrS,QAClBC,GAAIoS,EAASpS,GACbC,QAASmS,EAASnS,QAClBC,QAASkS,EAASlS,UAGtB2Q,EAAYwB,GAAM3M,SAClByK,GAAiB,EACnB,EAoDkExP,gBAAiBA,EAAiBQ,qBAnGvE,WAAH,OAASgP,GAAiB,EAAO,QAqGvD7O,EAAAA,EAAAA,KAACgR,GAAa,CACZxE,iBAAkBA,EAClBC,sBAxGwB,WAAH,OAASqC,GAAkB,EAAO,EAyGvDF,YAAa,SAACqC,GAAK,OAAKvB,EAAUuB,EAAM,OAG1C,IACN,C,4EC7FA,IApCkB,WAChB,IAAAjO,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAH,EAAAA,EAAAA,GAAAC,EAAA,GAApCkO,EAAMhO,EAAA,GAAEiO,EAASjO,EAAA,GAOxB,OANAiJ,EAAAA,EAAAA,YAAU,WACR,IAAIiF,EAAQ/E,YAAW,kBAAM8E,GAAU,EAAK,GAAE,KAC9C,OAAO,WACL7E,aAAa8E,EACf,CACF,GAAG,KAEDpR,EAAAA,EAAAA,KAAC6M,EAAAA,EAAQ,CACPlN,KAAMuR,EACN3Q,GAAI,CACFyB,MAAO,OACPqP,OAAQ,IACR1I,SAAU,WACVC,IAAK,IACL0I,OAAQ,IACRzI,KAAM,IACN0I,MAAO,KAGPxR,UAEFC,EAAAA,EAAAA,KAACwR,EAAAA,EAAgB,CACf/M,KAAM,GACNlE,GAAI,CACFoI,SAAU,eASpB,C","sources":["webpack://project1/./src/components/Profile/Profile.module.scss?4008","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileData.jsx","components/Profile/AddPhotoModal/canvasPreview.js","components/Profile/AddPhotoModal/AddPhotoModal.js","components/Profile/AddPhotoModal/useDebounceEffect.js","components/Profile/Profile.jsx","components/common/preloader/Preloader.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"addPhotoBtnDesktop\":\"Profile_addPhotoBtnDesktop__vNGcA\",\"addPhotoBtnMobile\":\"Profile_addPhotoBtnMobile__LyqS7\"};","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import err from \"../forms/FormsControl/FormsControls.module.scss\";\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FacebookOutlinedIcon from \"@mui/icons-material/FacebookOutlined\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n  const changeProfileSchema = yup.object().shape({\r\n    fullName: yup\r\n      .string(\"Name should be a string\")\r\n      .min(2, \"Name must have at least 2 letters\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      fullName: props.profile.fullName,\r\n      aboutMe: props.profile.aboutMe,\r\n      lookingForAJob: props.profile.lookingForAJob,\r\n      lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n      facebook: props.profile.contacts.facebook,\r\n      github: props.profile.contacts.github,\r\n      instagram: props.profile.contacts.instagram,\r\n      mainLink: props.profile.contacts.mainLink,\r\n      twitter: props.profile.contacts.twitter,\r\n      vk: props.profile.contacts.vk,\r\n      website: props.profile.contacts.website,\r\n      youtube: props.profile.contacts.youtube,\r\n    },\r\n    resolver: yupResolver(changeProfileSchema),\r\n  });\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (props.isFormModalOpen) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [props.isFormModalOpen]);\r\n\r\n  return (\r\n    <Dialog open={props.isFormModalOpen} onClose={props.handleCloseFormModal} scroll=\"paper\">\r\n       <DialogTitle id=\"scroll-dialog-title\">Change profile</DialogTitle>\r\n       <DialogContent dividers>\r\n        <form onSubmit={handleSubmit(props.onSubmit)}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Box>\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"fullName\"\r\n                variant=\"outlined\"\r\n                label=\"Your name\"\r\n                name=\"fullName\"\r\n                {...register(\"fullName\")}\r\n                required\r\n                error={errors.fullName}\r\n              />\r\n              {errors.fullName ? (\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {errors.fullName.message}\r\n                </Typography>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Box>\r\n            <Box>\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"aboutMe\"\r\n                variant=\"outlined\"\r\n                label=\"About me\"\r\n                name=\"aboutMe\"\r\n                {...register(\"aboutMe\")}\r\n              />\r\n            </Box>\r\n            <FormControlLabel\r\n              sx={{ m: 0 }}\r\n              labelPlacement=\"start\"\r\n              control={\r\n                <Checkbox\r\n                  {...register(\"lookingForAJob\")}\r\n                  name=\"lookingForAJob\"\r\n                  id=\"lookingForAJob\"\r\n                />\r\n              }\r\n              label=\"Looking For a job:\"\r\n            />\r\n\r\n            <TextField\r\n              sx={{ mb: 1, p: 0 }}\r\n              id=\"lookingForAJobDescription\"\r\n              variant=\"outlined\"\r\n              label=\"My skills\"\r\n              name=\"lookingForAJobDescription\"\r\n              {...register(\"lookingForAJobDescription\")}\r\n            />\r\n            <Typography sx={{ my: 2 }}>My contacts:</Typography>\r\n\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <FacebookOutlinedIcon\r\n                fontSize=\"large\"\r\n                sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n              />\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"facebook\"\r\n                variant=\"outlined\"\r\n                label=\"Facebook\"\r\n                name=\"facebook\"\r\n                {...register(\"facebook\")}\r\n              />\r\n            </Box>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <GitHubIcon\r\n                fontSize=\"large\"\r\n                sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n              />\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"github\"\r\n                variant=\"outlined\"\r\n                label=\"Github\"\r\n                name=\"github\"\r\n                {...register(\"github\")}\r\n              />\r\n            </Box>\r\n\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <InstagramIcon\r\n                fontSize=\"large\"\r\n                sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n              />\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"instagram\"\r\n                variant=\"outlined\"\r\n                label=\"Instagram\"\r\n                name=\"instagram\"\r\n                {...register(\"instagram\")}\r\n              />\r\n            </Box>\r\n\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <TwitterIcon\r\n                fontSize=\"large\"\r\n                sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n              />\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"twitter\"\r\n                variant=\"outlined\"\r\n                label=\"Twitter\"\r\n                name=\"twitter\"\r\n                {...register(\"twitter\")}\r\n              />\r\n            </Box>\r\n\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <LanguageIcon\r\n                fontSize=\"large\"\r\n                sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n              />\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"mainLink\"\r\n                variant=\"outlined\"\r\n                label=\"Main link\"\r\n                name=\"mainLink\"\r\n                {...register(\"mainLink\")}\r\n              />\r\n            </Box>\r\n\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <LanguageIcon\r\n                fontSize=\"large\"\r\n                sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n              />\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"website\"\r\n                variant=\"outlined\"\r\n                label=\"Website\"\r\n                name=\"website\"\r\n                {...register(\"website\")}\r\n              />\r\n            </Box>     \r\n\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <YouTubeIcon\r\n                fontSize=\"large\"\r\n                sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n              />\r\n              <TextField\r\n                sx={{ mb: 1, p: 0 }}\r\n                id=\"youtube\"\r\n                variant=\"outlined\"\r\n                label=\"Youtube\"\r\n                name=\"youtube\"\r\n                {...register(\"youtube\")}\r\n              />\r\n            </Box>\r\n            <Button type=\"submit\" variant=\"outlined\">Save</Button>            \r\n          </Box>\r\n        </form>\r\n        </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  useGetStatusQuery,\r\n  useUpdateStatusMutation,\r\n} from \"../../../api/apiSlice\";\r\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const { data } = useGetStatusQuery(props.userId);\r\n\r\n  const [updateStatus] = useUpdateStatusMutation();\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [newStatus, setNewStatus] = useState();\r\n\r\n  const activateEditMode = () => {\r\n    if (props.isOwner) {\r\n      setEditMode(true);\r\n      setNewStatus(data);\r\n    }\r\n  };\r\n\r\n  const deactivateEditMode = async () => {\r\n    await updateStatus({ status: newStatus }).unwrap();\r\n    setEditMode(false);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setNewStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{my:1}}>\r\n      {!editMode && (\r\n        <Box>\r\n          <Typography sx={{ my: 1, p: 0 }}>{data || \"No status\"}</Typography>\r\n          {props.isOwner&&<Button size=\"small\" variant=\"outlined\" onClick={activateEditMode}>\r\n            Edit status\r\n          </Button>}\r\n          \r\n        </Box>\r\n      )}\r\n      {editMode && (\r\n        <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <TextField\r\n            sx={{ mb: 1, p: 0 }}\r\n            value={newStatus}\r\n            onChange={onStatusChange}\r\n            id=\"standard-basic\"           \r\n            variant=\"filled\"\r\n            label=\"Status\"\r\n          />\r\n          <Button\r\n            sx={{ alignSelf: \"flex-start\" }}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onClick={deactivateEditMode}\r\n          >\r\n            Save status\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import { Box, Typography, IconButton, Button, Divider } from \"@mui/material\";\r\nimport CheckCircleOutlinedIcon from \"@mui/icons-material/CheckCircleOutlined\";\r\nimport CancelOutlinedIcon from \"@mui/icons-material/CancelOutlined\";\r\nimport FacebookOutlinedIcon from \"@mui/icons-material/FacebookOutlined\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n    <>\r\n      <Box sx={{ mt: 1 }}>\r\n\r\n        <Typography variant=\"h5\" component=\"h4\">\r\n          {props.profile.fullName}\r\n        </Typography>\r\n        <Divider />\r\n\r\n        <ProfileStatus isOwner={props.isOwner} userId={props.profile.userId} />\r\n        <Divider />\r\n        <Box sx={{my:2}}>\r\n        <Typography>About me: {props.profile.aboutMe}</Typography>\r\n        <Box sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <Typography>Looking for a job:</Typography>\r\n          {props.profile.lookingForAJob ? (\r\n            <CheckCircleOutlinedIcon />\r\n          ) : (\r\n            <CancelOutlinedIcon />\r\n          )}\r\n        </Box>\r\n        <Box>\r\n          <Typography>\r\n            Skills: {props.profile.lookingForAJobDescription}\r\n          </Typography>\r\n        </Box>\r\n\r\n        {Object.values(props.profile.contacts).some(\r\n          (elem) => elem !== null\r\n        ) && (\r\n          <Box>\r\n            <Typography>My contacts:</Typography>\r\n\r\n            <Box>\r\n              {props.profile.contacts.facebook && (\r\n                <Tooltip\r\n                  title={props.profile.contacts.facebook}\r\n                  arrow\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton\r\n                    href={props.profile.contacts.facebook}\r\n                    color=\"primary\"\r\n                  >\r\n                    <FacebookOutlinedIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n\r\n              {props.profile.contacts.github && (\r\n                <Tooltip\r\n                  title={props.profile.contacts.github}\r\n                  arrow\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton\r\n                    href={props.profile.contacts.github}\r\n                    color=\"primary\"\r\n                  >\r\n                    <GitHubIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n\r\n              {props.profile.contacts.instagram && (\r\n                <Tooltip\r\n                  title={props.profile.contacts.instagram}\r\n                  arrow\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton\r\n                    href={props.profile.contacts.instagram}\r\n                    color=\"primary\"\r\n                  >\r\n                    <InstagramIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n\r\n              {props.profile.contacts.twitter && (\r\n                <Tooltip\r\n                  title={props.profile.contacts.twitter}\r\n                  arrow\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton\r\n                    href={props.profile.contacts.twitter}\r\n                    color=\"primary\"\r\n                  >\r\n                    <TwitterIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n\r\n              {props.profile.contacts.mainLink && (\r\n                <Tooltip\r\n                  title={props.profile.contacts.mainLink}\r\n                  arrow\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton\r\n                    href={props.profile.contacts.mainLink}\r\n                    color=\"primary\"\r\n                  >\r\n                    <LanguageIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n\r\n              {props.profile.contacts.website && (\r\n                <Tooltip\r\n                  title={props.profile.contacts.website}\r\n                  arrow\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton\r\n                    href={props.profile.contacts.website}\r\n                    color=\"primary\"\r\n                  >\r\n                    <LanguageIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n\r\n              {props.profile.contacts.youtube && (\r\n                <Tooltip\r\n                  title={props.profile.contacts.youtube}\r\n                  arrow\r\n                  TransitionComponent={Zoom}\r\n                >\r\n                  <IconButton\r\n                    href={props.profile.contacts.youtube}\r\n                    color=\"primary\"\r\n                  >\r\n                    <YouTubeIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {props.isOwner && (\r\n          <Button variant=\"outlined\" onClick={props.goToEditMode}>\r\n            Edit profile\r\n          </Button>\r\n        )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileData;\r\n","\r\n\r\nconst TO_RADIANS = Math.PI / 180\r\n\r\nexport async function canvasPreview(\r\n  image,\r\n  canvas,\r\n  crop,\r\n  scale = 1,\r\n  rotate = 0,\r\n) {\r\n  const ctx = canvas.getContext('2d')\r\n\r\n  if (!ctx) {\r\n    throw new Error('No 2d context')\r\n  }\r\n\r\n  const scaleX = image.naturalWidth / image.width\r\n  const scaleY = image.naturalHeight / image.height\r\n  // devicePixelRatio slightly increases sharpness on retina devices\r\n  // at the expense of slightly slower render times and needing to\r\n  // size the image back down if you want to download/upload and be\r\n  // true to the images natural size.\r\n  const pixelRatio = window.devicePixelRatio\r\n  // const pixelRatio = 1\r\n\r\n  canvas.width = Math.floor(crop.width * scaleX * pixelRatio)\r\n  canvas.height = Math.floor(crop.height * scaleY * pixelRatio)\r\n\r\n  ctx.scale(pixelRatio, pixelRatio)\r\n  ctx.imageSmoothingQuality = 'high'\r\n\r\n  const cropX = crop.x * scaleX\r\n  const cropY = crop.y * scaleY\r\n\r\n  const rotateRads = rotate * TO_RADIANS\r\n  const centerX = image.naturalWidth / 2\r\n  const centerY = image.naturalHeight / 2\r\n\r\n  ctx.save()\r\n\r\n  // 5) Move the crop origin to the canvas origin (0,0)\r\n  ctx.translate(-cropX, -cropY)\r\n  // 4) Move the origin to the center of the original position\r\n  ctx.translate(centerX, centerY)\r\n  // 3) Rotate around the origin\r\n  ctx.rotate(rotateRads)\r\n  // 2) Scale the image\r\n  ctx.scale(scale, scale)\r\n  // 1) Move the center of the image to the origin (0,0)\r\n  ctx.translate(-centerX, -centerY)\r\n  ctx.drawImage(\r\n    image,\r\n    0,\r\n    0,\r\n    image.naturalWidth,\r\n    image.naturalHeight,\r\n    0,\r\n    0,\r\n    image.naturalWidth,\r\n    image.naturalHeight,\r\n  )\r\n\r\n  ctx.restore()\r\n}\r\n","import React, {useState, useRef } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"react-image-crop/src/ReactCrop.scss\";\r\nimport Slider from \"@mui/material/Slider\";\r\n\r\n\r\nimport ReactCrop, { centerCrop, makeAspectCrop } from \"react-image-crop\";\r\nimport { canvasPreview } from \"./canvasPreview\";\r\nimport { useDebounceEffect } from \"./useDebounceEffect\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nconst boxStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction centerAspectCrop(mediaWidth, mediaHeight, aspect) {\r\n  return centerCrop(\r\n    makeAspectCrop(\r\n      {\r\n        unit: \"%\",\r\n        width: 90,\r\n      },\r\n      aspect,\r\n      mediaWidth,\r\n      mediaHeight\r\n    ),\r\n    mediaWidth,\r\n    mediaHeight\r\n  );\r\n}\r\n\r\nconst AddPhotoModal = (props) => {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    maxFiles: 1,\r\n    accept: {\r\n      \"image/jpeg\": [],\r\n      \"image/png\": [],\r\n    },\r\n    onDrop: (acceptedFiles) => {\r\n      setCrop(undefined); // Makes crop preview update between images.\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        setImgSrc(reader.result?.toString() || \"\");\r\n      });\r\n      reader.readAsDataURL(acceptedFiles[0]);\r\n    },\r\n  });\r\n\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n  const previewCanvasRef = useRef(null);\r\n  const imgRef = useRef(null);\r\n  const blobUrlRef = useRef(\"\");\r\n  const [crop, setCrop] = useState();\r\n  const [completedCrop, setCompletedCrop] = useState();\r\n  const [scale, setScale] = useState(1);\r\n  const [rotate, setRotate] = useState(0);\r\n  const [aspect, setAspect] = useState(1 / 1);\r\n  const [currentImageSize, setCurrentImageSize] = useState();\r\n\r\n  function onImageLoad(e) {\r\n    if (aspect) {\r\n      const { width, height } = e.currentTarget;\r\n      setCrop(centerAspectCrop(width, height, aspect));\r\n    }\r\n  }\r\n\r\n  function onSendClick() {\r\n    if (!previewCanvasRef.current) {\r\n      throw new Error(\"Crop canvas does not exist\");\r\n    }\r\n    previewCanvasRef.current.toBlob((blob) => {\r\n      if (!blob) {\r\n        throw new Error(\"Failed to create blob\");\r\n      }\r\n      if (blobUrlRef.current) {\r\n        URL.revokeObjectURL(blobUrlRef.current);\r\n      }\r\n      blobUrlRef.current = URL.createObjectURL(blob);\r\n      const newImage = new File([blob], \"newAvatar.png\", { type: \"image/png\" });\r\n      props.onPhotoSend(newImage);\r\n      setImgSrc(\"\");\r\n      setCompletedCrop();\r\n      props.handleClosePhotoModal();\r\n    });\r\n  }\r\n\r\n  useDebounceEffect(\r\n    async () => {\r\n      if (\r\n        completedCrop?.width &&\r\n        completedCrop?.height &&\r\n        imgRef.current &&\r\n        previewCanvasRef.current\r\n      ) {\r\n        // We use canvasPreview as it's much faster than imgPreview.\r\n        canvasPreview(\r\n          imgRef.current,\r\n          previewCanvasRef.current,\r\n          completedCrop,\r\n          scale,\r\n          rotate\r\n        );\r\n        previewCanvasRef.current.toBlob((blob) => {\r\n          if (!blob) {\r\n            throw new Error(\"Failed to create blob\");\r\n          }\r\n          if (blobUrlRef.current) {\r\n            URL.revokeObjectURL(blobUrlRef.current);\r\n          }\r\n          blobUrlRef.current = URL.createObjectURL(blob);\r\n          const newImage = new File([blob], \"temporaryAvatar.png\", {\r\n            type: \"image/png\",\r\n          });\r\n          setCurrentImageSize((newImage.size / 1024 / 1024).toFixed(2));\r\n        });\r\n      }\r\n    },\r\n    100,\r\n    [completedCrop, scale, rotate]\r\n  );\r\n\r\n  const handleScale = (scale) => {\r\n    setScale(scale);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={props.isPhotoModalOpen}\r\n      onClose={props.handleClosePhotoModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      closeAfterTransition\r\n      slots={{ backdrop: Backdrop }}\r\n        slotProps={{\r\n          backdrop: {\r\n            timeout: 500,\r\n          },\r\n        }}\r\n    >\r\n      <Fade in={props.isPhotoModalOpen}>\r\n        <Box sx={boxStyle}>\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n            <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n          </div>\r\n\r\n          {!!imgSrc && (\r\n            <>\r\n              <ReactCrop\r\n                crop={crop}\r\n                onChange={(_, percentCrop) => setCrop(percentCrop)}\r\n                onComplete={(c) => setCompletedCrop(c)}\r\n                aspect={aspect}\r\n              >\r\n                <img\r\n                  ref={imgRef}\r\n                  alt=\"Crop me\"\r\n                  src={imgSrc}\r\n                  style={{ transform: `scale(${scale})` }}\r\n                  onLoad={onImageLoad}\r\n                />\r\n              </ReactCrop>\r\n              <Slider\r\n                aria-label=\"Scale\"\r\n                orientation=\"vertical\"\r\n                getAriaValueText={handleScale}\r\n                valueLabelDisplay=\"auto\"\r\n                defaultValue={1}\r\n                max={3}\r\n                step={0.1}\r\n                sx={{ height: 300 }}\r\n              />\r\n            </>\r\n          )}\r\n          {!!completedCrop && (\r\n            <>\r\n              <div>\r\n                <canvas\r\n                  ref={previewCanvasRef}\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    objectFit: \"contain\",\r\n                    width: completedCrop.width,\r\n                    height: completedCrop.height,\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <Box>\r\n                <button onClick={onSendClick}>Send Crop</button>\r\n                <Typography\r\n                  sx={[\r\n                    {\r\n                      color: \"red\",\r\n                    },\r\n                    currentImageSize < 4 && {\r\n                      color: \"green\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  Size must be smaller than 4MB, now {currentImageSize}MB\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\nexport default AddPhotoModal;\r\n","import { useEffect} from 'react'\r\n\r\nexport function useDebounceEffect(\r\n  fn,\r\n  waitTime,\r\n  deps\r\n) {\r\n  useEffect(() => {\r\n    const t = setTimeout(() => {\r\n      fn.apply(undefined, deps)\r\n    }, waitTime)\r\n\r\n    return () => {\r\n      clearTimeout(t)\r\n    }\r\n  }, deps)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Profile.module.scss\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  useGetProfileQuery,\r\n  useMeQuery,\r\n  useSavePhotoMutation,\r\n  useSaveProfileMutation,\r\n} from \"../../api/apiSlice\";\r\nimport PageNotFound from \"../404/PageNotFound\";\r\nimport AddAPhotoOutlinedIcon from \"@mui/icons-material/AddAPhotoOutlined\";\r\nimport { Avatar, Box, Button } from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddPhotoModal from \"./AddPhotoModal/AddPhotoModal\";\r\n\r\n\r\nconst Profile = () => {\r\n  const [isFormModalOpen, setFormModalOpen] = useState(false);\r\n  const [isPhotoModalOpen, setPhotoModalOpen] = useState(false);\r\n  const handlePhotoModalOpen = () => setPhotoModalOpen(true);\r\n  const handlePhotoModalClose = () => setPhotoModalOpen(false);\r\n  const handleFormModalClose = () => setFormModalOpen(false);\r\n\r\n  const me = useMeQuery(undefined, {\r\n    selectFromResult: ({ data }) => ({\r\n      me: data.data,\r\n    }),\r\n  });\r\n\r\n  let paramId = useParams();\r\n  let userId = paramId.userId;\r\n  let isOwner = false;\r\n  if (!userId) {\r\n    userId = me.me.id;\r\n  }\r\n  if (userId === me.me.id) {\r\n    isOwner = true;\r\n  }\r\n\r\n  const profile = useGetProfileQuery(userId);\r\n\r\n  const [saveProfile] = useSaveProfileMutation();\r\n\r\n  const [savePhoto] = useSavePhotoMutation();\r\n\r\n  const goToEditMode = () => {\r\n    setFormModalOpen(true);\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    let body = {\r\n      fullName: formData.fullName,\r\n      aboutMe: formData.aboutMe,\r\n      lookingForAJob: formData.lookingForAJob,\r\n      lookingForAJobDescription: formData.lookingForAJobDescription,\r\n      contacts: {\r\n        facebook: formData.facebook,\r\n        github: formData.github,\r\n        instagram: formData.instagram,\r\n        mainLink: formData.mainLink,\r\n        twitter: formData.twitter,\r\n        vk: formData.vk,\r\n        website: formData.website,\r\n        youtube: formData.youtube,\r\n      },\r\n    };\r\n    saveProfile(body).unwrap();\r\n    setFormModalOpen(false);\r\n  };\r\n\r\n  return profile.isError ? (\r\n    <PageNotFound />\r\n  ) : profile.isLoading ? (\r\n    <Preloader />\r\n  ) : profile.data ? (\r\n    // <Preloader />\r\n    <Box\r\n      sx={{\r\n        p: 2,\r\n        display: \"flex\",\r\n        flexDirection: {xs:\"column\", md:\"row\"},\r\n        alignItems: {xs:\"center\", md:\"start\"},\r\n        flexGrow:\"1\"\r\n      }}\r\n    >\r\n      <Box sx={{ position: \"relative\" }}>\r\n        <Avatar\r\n          alt={profile.data.fullName}\r\n          src={profile.data.photos.large}\r\n          variant=\"square\"\r\n          sx={{ \r\n            width: {xs:260, sm:320}, \r\n            height: {xs:260, sm:320} }}\r\n        />\r\n        {isOwner&&<Box className={styles.addPhotoBtnDesktop}>\r\n          <Button\r\n            onClick={handlePhotoModalOpen}\r\n            color=\"info\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddAPhotoOutlinedIcon />}\r\n          >\r\n            Add photo\r\n          </Button>\r\n        </Box>}\r\n        {isOwner&&<Box className={styles.addPhotoBtnMobile}>\r\n          <IconButton color=\"info\" onClick={handlePhotoModalOpen}>\r\n            <AddAPhotoOutlinedIcon />\r\n          </IconButton>\r\n        </Box>}\r\n        \r\n        \r\n      </Box>\r\n      <Box sx={{ alignSelf: \"stretch\", px: 3, py: 1, flexGrow:1 }}>     \r\n\r\n       \r\n        <ProfileData\r\n          goToEditMode={goToEditMode}\r\n          profile={profile.data}\r\n          isOwner={isOwner}\r\n        />\r\n        <ProfileDataForm profile={profile.data} onSubmit={onSubmit} isFormModalOpen={isFormModalOpen} handleCloseFormModal={handleFormModalClose}/>\r\n      </Box>\r\n      <AddPhotoModal\r\n        isPhotoModalOpen={isPhotoModalOpen}\r\n        handleClosePhotoModal={handlePhotoModalClose}\r\n        onPhotoSend={(photo) => savePhoto(photo)}\r\n      />\r\n    </Box>\r\n  ) : null;\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Backdrop, CircularProgress } from \"@mui/material\";\r\n\r\nconst Preloader = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => setIsOpen(true), 1000);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Backdrop\r\n      open={isOpen}\r\n      sx={{\r\n        color: \"#eee\",\r\n        zIndex: 100,\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        // width: \"100%\",\r\n        // height: \"100%\"\r\n      }}\r\n    >\r\n      <CircularProgress\r\n        size={68}\r\n        sx={{\r\n          position: \"absolute\",\r\n          // top: \"50%\",\r\n          // right: \"50%\",\r\n          // marginTop: \"-34px\",\r\n          // marginBottom: \"-34px\",\r\n        }}\r\n      />\r\n    </Backdrop>\r\n  );\r\n};\r\nexport default Preloader;\r\n"],"names":["props","changeProfileSchema","yup","shape","fullName","min","_useForm","useForm","defaultValues","profile","aboutMe","lookingForAJob","lookingForAJobDescription","facebook","contacts","github","instagram","mainLink","twitter","vk","website","youtube","resolver","yupResolver","register","handleSubmit","errors","formState","descriptionElementRef","React","isFormModalOpen","descriptionElement","current","focus","_jsxs","Dialog","open","onClose","handleCloseFormModal","scroll","children","_jsx","DialogTitle","id","DialogContent","dividers","onSubmit","Box","sx","display","flexDirection","alignItems","TextField","_objectSpread","mb","p","variant","label","name","required","error","Typography","component","message","_Fragment","FormControlLabel","m","labelPlacement","control","Checkbox","my","FacebookOutlinedIcon","fontSize","color","mr","GitHubIcon","InstagramIcon","TwitterIcon","LanguageIcon","YouTubeIcon","Button","type","data","useGetStatusQuery","userId","_useUpdateStatusMutat","useUpdateStatusMutation","updateStatus","_slicedToArray","_useState","useState","_useState2","editMode","setEditMode","_useState3","_useState4","newStatus","setNewStatus","deactivateEditMode","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","status","unwrap","stop","apply","arguments","isOwner","size","onClick","value","onChange","e","currentTarget","alignSelf","mt","Divider","ProfileStatus","CheckCircleOutlinedIcon","CancelOutlinedIcon","Object","values","some","elem","Tooltip","title","arrow","TransitionComponent","Zoom","IconButton","href","goToEditMode","TO_RADIANS","Math","PI","canvasPreview","_x","_x2","_x3","_canvasPreview","image","canvas","crop","scale","rotate","ctx","scaleX","scaleY","pixelRatio","cropX","cropY","rotateRads","centerX","centerY","_args","length","undefined","getContext","Error","naturalWidth","width","naturalHeight","height","window","devicePixelRatio","floor","imageSmoothingQuality","x","y","save","translate","drawImage","restore","boxStyle","position","top","left","transform","bgcolor","border","boxShadow","fn","waitTime","deps","_useDropzone","useDropzone","maxFiles","accept","onDrop","acceptedFiles","setCrop","reader","FileReader","addEventListener","_reader$result","setImgSrc","result","toString","readAsDataURL","getRootProps","getInputProps","imgSrc","previewCanvasRef","useRef","imgRef","blobUrlRef","_useState5","_useState6","completedCrop","setCompletedCrop","_useState7","_useState8","setScale","_useState9","_useState10","_useState11","_useState12","aspect","_useState13","_useState14","currentImageSize","setCurrentImageSize","toBlob","blob","URL","revokeObjectURL","createObjectURL","newImage","File","toFixed","useEffect","t","setTimeout","clearTimeout","Modal","isPhotoModalOpen","handleClosePhotoModal","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","ReactCrop","_","percentCrop","onComplete","c","ref","alt","src","style","concat","onLoad","_e$currentTarget","mediaWidth","mediaHeight","centerCrop","makeAspectCrop","unit","centerAspectCrop","Slider","orientation","getAriaValueText","valueLabelDisplay","defaultValue","max","step","objectFit","onPhotoSend","setFormModalOpen","setPhotoModalOpen","handlePhotoModalOpen","me","useMeQuery","selectFromResult","useParams","useGetProfileQuery","_useSaveProfileMutati","useSaveProfileMutation","saveProfile","_useSavePhotoMutation","useSavePhotoMutation","savePhoto","isError","PageNotFound","isLoading","Preloader","xs","md","flexGrow","Avatar","photos","large","sm","className","styles","startIcon","AddAPhotoOutlinedIcon","px","py","ProfileData","ProfileDataForm","formData","body","AddPhotoModal","photo","isOpen","setIsOpen","timer","zIndex","bottom","right","CircularProgress"],"sourceRoot":""}